{"version":3,"sources":["../static/js/1.537db7c4.chunk.js","views/Clients/Clients.js","../node_modules/webpack/buildin/module.js","../node_modules/moment/moment.js","views/Clients/Client.js","views/Clients/ClientForm.js"],"names":["webpackJsonp","268","module","__webpack_exports__","__webpack_require__","_asyncToGenerator","fn","gen","apply","this","arguments","Promise","resolve","reject","step","key","arg","info","value","error","done","then","err","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default","n","__WEBPACK_IMPORTED_MODULE_1_react__","__WEBPACK_IMPORTED_MODULE_1_react___default","__WEBPACK_IMPORTED_MODULE_2_reactstrap__","__WEBPACK_IMPORTED_MODULE_3__helpers_auth__","__WEBPACK_IMPORTED_MODULE_4__services_freeLaApi__","__WEBPACK_IMPORTED_MODULE_5__Client__","_createClass","defineProperties","target","props","i","length","descriptor","protoProps","staticProps","Clients","_Component","_this","getPrototypeOf","Auth","checkSession","state","client","undefined","clients","toggleClientDetails","bind","getAllClients","_ref","a","mark","_callee","wrap","_context","prev","next","FreeLaApi","clientList","Number","sessionStorage","getItem","sent","setState","data","stop","_this2","createElement","className","isOpen","xl","hover","responsive","map","item","id","toString","onClick","name","email","Component","278","exports","webpackPolyfill","deprecate","paths","children","get","l","280","global","factory","hooks","hookCallback","isArray","input","Array","isObject","isObjectEmpty","obj","getOwnPropertyNames","k","hasOwnProperty","isUndefined","isNumber","isDate","Date","arr","res","push","hasOwnProp","b","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","m","_pf","isValid","_isValid","flags","parsedParts","some","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","NaN","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","absFloor","number","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","isFinite","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","console","firstTime","deprecationHandler","args","slice","join","Error","stack","deprecateSimple","deprecations","isFunction","Function","set","_config","_dayOfMonthOrdinalParseLenient","RegExp","_dayOfMonthOrdinalParse","source","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","calendar","mom","now","output","_calendar","longDateFormat","_longDateFormat","formatUpper","toUpperCase","replace","invalidDate","_invalidDate","ordinal","_ordinal","relativeTime","withoutSuffix","string","isFuture","_relativeTime","pastFuture","diff","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priority","priorities","getPrioritizedUnits","unitsObj","u","sort","zeroFill","targetLength","forceSign","absNumber","zerosToFill","pow","max","substr","addFormatToken","token","padded","callback","func","formatTokenFunctions","localeData","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","test","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","s","regexEscape","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInYear","year","isLeapYear","getIsLeapYear","makeGetSet","keepTime","set$1","month","date","daysInMonth","stringGet","stringSet","prioritized","mod","x","modMonth","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","monthsShort","months","indexOf","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","createDate","y","d","h","M","ms","getFullYear","setFullYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","add","getSetISOWeek","parseWeekday","weekdaysParse","parseInt","parseIsoWeekday","localeWeekdays","_weekdays","day","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","weekdaysMin","weekdaysShort","weekdays","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","normalizeLocale","chooseLocale","names","j","split","loadLocale","globalLocale","oldLocale","locales","_abbr","e","code","getSetGlobalLocale","values","getLocale","defineLocale","baseConfig","abbr","parentLocale","localeFamilies","forEach","updateLocale","tmpLocale","listLocales","keys","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","defaults","c","currentDateArray","nowValue","_useUTC","getUTCMonth","getUTCDate","getMonth","getDate","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","curWeek","gg","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","exec","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","defaultLocaleMonthsShort","preprocessRFC2822","checkWeekday","weekdayStr","parsedInput","defaultLocaleWeekdaysShort","calculateOffset","obsOffset","militaryOffset","numOffset","obsOffsets","hm","configFromRFC2822","parsedArray","configFromString","aspNetJsonRegex","createFromInputFallback","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","_meridiem","meridiemFixWrap","hour","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","isDurationValid","ordering","unitHasDecimal","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","days","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","sign","offsetFromString","matcher","matches","chunk","parts","chunkOffset","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","matchShortOffset","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","dur","tmp","isAdding","getCalendarFormat","myMoment","calendar$1","time","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","keepOffset","toDate","inspect","zone","prefix","suffix","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","isoWeekday","unix","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","clone$1","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","ss","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","withSuffix","toISOString$1","abs$1","Y","D","toFixed","total","asSeconds","totalSign","ymSign","daysSign","hmsSign","fun","t","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultDayOfMonthOrdinalParse","defaultRelativeTime","future","past","mm","hh","dd","MM","yy","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","parseTwoDigitYear","getSetYear","o","defaultLocaleMonths","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysMin","kInput","_isPm","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","dayOfMonthOrdinalParse","meridiemParse","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","prototypeMin","prototypeMax","invalid","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","467","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_reactstrap__","__WEBPACK_IMPORTED_MODULE_2_moment__","__WEBPACK_IMPORTED_MODULE_2_moment___default","Client","type","handleEdit","size","color","style","maxHeight","margin","src","cpf","phone1","phone2","birthdate","moment","createdat","468","__WEBPACK_IMPORTED_MODULE_1_moment__","__WEBPACK_IMPORTED_MODULE_1_moment___default","ClientForm","nextProps","method","encType","onChange","handleInput","row","md","htmlFor","xs","placeholder","autoComplete","maxLength","photo"],"mappings":"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","file":"static/js/1.537db7c4.chunk.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 268:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(43);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_reactstrap__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__helpers_auth__ = __webpack_require__(106);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_freeLaApi__ = __webpack_require__(65);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Client__ = __webpack_require__(467);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ClientForm__ = __webpack_require__(468);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var clientModel={name:undefined,email:undefined,birthdate:undefined,cpf:undefined,phone1:undefined,phone2:undefined,createdat:undefined};var Clients=function(_Component){_inherits(Clients,_Component);function Clients(props){_classCallCheck(this,Clients);var _this=_possibleConstructorReturn(this,(Clients.__proto__||Object.getPrototypeOf(Clients)).call(this,props));__WEBPACK_IMPORTED_MODULE_3__helpers_auth__[\"a\" /* default */].checkSession();_this.state={client:undefined,clients:[]};_this.toggleClientDetails=_this.toggleClientDetails.bind(_this);return _this;}_createClass(Clients,[{key:'componentWillMount',value:function componentWillMount(){this.getAllClients();}},{key:'getAllClients',value:function(){var _ref=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee(){var clients;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return __WEBPACK_IMPORTED_MODULE_4__services_freeLaApi__[\"a\" /* default */].clientList(Number(sessionStorage.getItem('userId')));case 2:clients=_context.sent;this.setState({clients:clients.data});case 4:case'end':return _context.stop();}}},_callee,this);}));function getAllClients(){return _ref.apply(this,arguments);}return getAllClients;}()},{key:'toggleClientDetails',value:function toggleClientDetails(client){this.setState({client:client});}// handleClientFormInput(e) {\n//   const name = e.target.name;\n//   const value = e.target.value;\n//   this.setState({ \n//     clientForm: {...this.state.clientForm, [name]: value },\n//   });\n// }\n// async handleClientFormSubmit(){\n//   const client = this.state.clientForm;\n//   if (client) {\n//     if (client.id) {\n//       const resp = await FreeLaApi.clientEdit(client);\n//       if (resp.success) {\n//         this.setState({ client: resp.data });\n//         this.getAllClients();\n//       }\n//     } else {\n//       const resp = await FreeLaApi.clientAdd(client);\n//       if (resp.success) {\n//         this.setState({ client: resp.data });\n//         this.getAllClients();\n//       }\n//     }\n//   }\n// }\n// handleClientFormReset(){\n//   this.setState({ \n//     clientForm: clientModel,\n//   });\n// }\n// handleEdit(client) {\n//   this.setState({ \n//     clientForm: client,\n//     client: undefined,\n//   });\n// }\n},{key:'render',value:function render(){var _this2=this;return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('div',{className:'animated fadeIn'},__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"E\" /* Row */],null,__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"z\" /* Modal */],{isOpen:this.state.client},__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__Client__[\"a\" /* default */],{data:this.state.client})),__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"k\" /* Col */],{xl:12},__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"f\" /* Card */],null,__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"j\" /* CardHeader */],null,__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('strong',null,__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('i',{className:'fa fa-users'}),'  Clientes')),__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"g\" /* CardBody */],null,__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"H\" /* Table */],{hover:true,responsive:true,className:'table-outline mb-0 d-sm-table'},__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('thead',{className:'thead-light'},__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('tr',null,__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('th',null,'Nome'),__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('th',null,'E-mail'))),__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('tbody',null,this.state.clients.map(function(item){return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('tr',{key:item.id.toString()},__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('td',null,__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('a',{onClick:function onClick(){return _this2.toggleClientDetails(item);}},__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('b',null,item.name))),__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('td',null,item.email));}))))))));}}]);return Clients;}(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"default\"] = (Clients);\n\n/***/ }),\n\n/***/ 278:\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n/***/ }),\n\n/***/ 280:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var require;//! moment.js\n\n;(function (global, factory) {\n     true ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        if (!m) {\n            return isArray(this._weekdays) ? this._weekdays :\n                this._weekdays['standalone'];\n        }\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                !(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"./locale\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input,units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input,units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n            case 'date':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n\n        // 'date' is an alias for 'day', so it should be considered as such.\n        if (units === 'date') {\n            units = 'day';\n        }\n\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.22.2';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'YYYY-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(278)(module)))\n\n/***/ }),\n\n/***/ 467:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_reactstrap__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment__ = __webpack_require__(280);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_moment__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Client=function(_Component){_inherits(Client,_Component);function Client(props){_classCallCheck(this,Client);return _possibleConstructorReturn(this,(Client.__proto__||Object.getPrototypeOf(Client)).call(this,props));}_createClass(Client,[{key:'render',value:function render(){var _this2=this;var client=this.props.data;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'animated fadeIn'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_reactstrap__[\"f\" /* Card */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_reactstrap__[\"j\" /* CardHeader */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',{className:'text-capitalize'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icon-user'}),'\\xA0',client.name),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_reactstrap__[\"e\" /* Button */],{type:'button',className:'pull-right',onClick:function onClick(){return _this2.props.handleEdit(client);},size:'sm',color:'warning'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'fa fa-pencil'}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_reactstrap__[\"g\" /* CardBody */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_reactstrap__[\"E\" /* Row */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img',{style:{maxHeight:'200px',margin:'0 auto'},className:'img-responsive rounded-circle',src:'https://image.freepik.com/free-icon/male-user-shadow_318-34042.jpg'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('br',null),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_reactstrap__[\"E\" /* Row */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label',{className:'col-3 text-right'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('b',null,'CPF:')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label',{className:'col-9'},client.cpf?client.cpf:'-')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_reactstrap__[\"E\" /* Row */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label',{className:'col-3 text-right'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('b',null,'E-mail:')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label',{className:'col-9'},client.email?client.email:'-')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_reactstrap__[\"E\" /* Row */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label',{className:'col-3 text-right'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('b',null,'Telefone 1:')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label',{className:'col-9'},client.phone1?client.phone1:'-')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_reactstrap__[\"E\" /* Row */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label',{className:'col-3 text-right'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('b',null,'Telefone 2:')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label',{className:'col-9'},client.phone2?client.phone2:'-')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_reactstrap__[\"E\" /* Row */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label',{className:'col-3 text-right'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('b',null,'Nascimento:')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label',{className:'col-9'},client.birthdate?__WEBPACK_IMPORTED_MODULE_2_moment___default()(client.birthdate).format('DD/MM/YYYY'):'-')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_reactstrap__[\"E\" /* Row */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label',{className:'col-3 text-right'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('b',null,'Criado em:')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label',{className:'col-9'},client.createdat?__WEBPACK_IMPORTED_MODULE_2_moment___default()(client.createdat).format('DD/MM/YYYY HH:MM'):'-')))));}}]);return Client;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"a\"] = (Client);\n\n/***/ }),\n\n/***/ 468:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment__ = __webpack_require__(280);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_reactstrap__ = __webpack_require__(10);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var ClientForm=function(_Component){_inherits(ClientForm,_Component);function ClientForm(props){_classCallCheck(this,ClientForm);var _this=_possibleConstructorReturn(this,(ClientForm.__proto__||Object.getPrototypeOf(ClientForm)).call(this,props));_this.state={client:_this.props.data||{}};return _this;}_createClass(ClientForm,[{key:'componentWillReceiveProps',value:function componentWillReceiveProps(nextProps){this.setState({client:nextProps.data||{}});}},{key:'render',value:function render(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"q\" /* Form */],{method:'post',encType:'multipart/form-data',className:'form-horizontal'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"s\" /* Input */],{value:!this.state.client.id?undefined:this.state.client.id,onChange:this.props.handleInput,type:'hidden',id:'id-input',name:'id'}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"r\" /* FormGroup */],{row:true},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"k\" /* Col */],{md:'3'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"w\" /* Label */],{htmlFor:'text-input'},'Nome')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"k\" /* Col */],{xs:'12',md:'9'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"s\" /* Input */],{value:!this.state.client.name?'':this.state.client.name,onChange:this.props.handleInput,type:'text',id:'text-input',name:'name',placeholder:'Digite o nome completo'}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"r\" /* FormGroup */],{row:true},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"k\" /* Col */],{md:'3'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"w\" /* Label */],{htmlFor:'email-input'},'E-mail')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"k\" /* Col */],{xs:'12',md:'9'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"s\" /* Input */],{value:!this.state.client.email?'':this.state.client.email,onChange:this.props.handleInput,type:'email',id:'email-input',name:'email',placeholder:'Digite o e-mail',autoComplete:'email'}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"r\" /* FormGroup */],{row:true},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"k\" /* Col */],{md:'3'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"w\" /* Label */],{htmlFor:'cpf-input'},'CPF')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"k\" /* Col */],{xs:'12',md:'9'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"s\" /* Input */],{value:!this.state.client.cpf?'':this.state.client.cpf,onChange:this.props.handleInput,type:'text',maxLength:11,id:'cpf-input',name:'cpf',placeholder:'Informe o CPF (somente n\\xFAmeros)'}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"r\" /* FormGroup */],{row:true},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"k\" /* Col */],{md:'3'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"w\" /* Label */],{htmlFor:'birthDate-input'},'Nascimento')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"k\" /* Col */],{xs:'12',md:'9'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"s\" /* Input */],{value:!this.state.client.birthdate?'':__WEBPACK_IMPORTED_MODULE_1_moment___default()(this.state.client.birthdate).format('YYYY-MM-DD'),onChange:this.props.handleInput,type:'date',id:'birthDate-input',name:'birthdate'}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"r\" /* FormGroup */],{row:true},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"k\" /* Col */],{md:'3'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"w\" /* Label */],{htmlFor:'phone1-input'},'Telefone 1')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"k\" /* Col */],{xs:'12',md:'9'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"s\" /* Input */],{value:!this.state.client.phone1?'':this.state.client.phone1,onChange:this.props.handleInput,type:'text',maxLength:12,id:'phone1-input',name:'phone1'}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"r\" /* FormGroup */],{row:true},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"k\" /* Col */],{md:'3'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"w\" /* Label */],{htmlFor:'phone2-input'},'Telefone 2')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"k\" /* Col */],{xs:'12',md:'9'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"s\" /* Input */],{value:!this.state.client.phone2?'':this.state.client.phone2,onChange:this.props.handleInput,type:'text',maxLength:12,id:'phone2-input',name:'phone2'}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"r\" /* FormGroup */],{row:true},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"k\" /* Col */],{md:'3'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"w\" /* Label */],{htmlFor:'photo-input'},'Foto')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"k\" /* Col */],{xs:'12',md:'9'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_reactstrap__[\"s\" /* Input */],{value:!this.state.client.photo?'':this.state.client.photo,onChange:this.props.handleInput,type:'file',id:'photo-input',name:'photo'}))));}}]);return ClientForm;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* unused harmony default export */ var _unused_webpack_default_export = (ClientForm);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.537db7c4.chunk.js","import React, { Component } from 'react';\nimport { Button, Card, CardBody, CardHeader, Col, Row, Table, Modal } from 'reactstrap';\nimport Auth from '../../helpers/auth';\nimport FreeLaApi from '../../services/freeLaApi';\nimport Client from './Client'\nimport ClientForm from './ClientForm'\n\nconst clientModel = {\n  name: undefined,\n  email: undefined,\n  birthdate: undefined,\n  cpf: undefined,\n  phone1: undefined,\n  phone2: undefined,\n  createdat: undefined,\n}\n\nclass Clients extends Component {\n\n  constructor(props) {\n    super(props);\n    Auth.checkSession();\n\n    this.state = {\n      client: undefined,\n      clients: [],\n    }\n\n    this.toggleClientDetails = this.toggleClientDetails.bind(this);\n  }\n\n  componentWillMount(){\n    this.getAllClients();  \n  }\n\n  async getAllClients(){\n    const clients = await FreeLaApi.clientList(Number(sessionStorage.getItem('userId')));\n    this.setState({ clients: clients.data });\n  }\n\n  toggleClientDetails(client) {\n    this.setState({ client });\n  }\n\n  // handleClientFormInput(e) {\n  //   const name = e.target.name;\n  //   const value = e.target.value;\n  //   this.setState({ \n  //     clientForm: {...this.state.clientForm, [name]: value },\n  //   });\n  // }\n\n  // async handleClientFormSubmit(){\n  //   const client = this.state.clientForm;\n  //   if (client) {\n  //     if (client.id) {\n  //       const resp = await FreeLaApi.clientEdit(client);\n  //       if (resp.success) {\n  //         this.setState({ client: resp.data });\n  //         this.getAllClients();\n  //       }\n  //     } else {\n  //       const resp = await FreeLaApi.clientAdd(client);\n  //       if (resp.success) {\n  //         this.setState({ client: resp.data });\n  //         this.getAllClients();\n  //       }\n  //     }\n  //   }\n  // }\n\n  // handleClientFormReset(){\n  //   this.setState({ \n  //     clientForm: clientModel,\n  //   });\n  // }\n\n  // handleEdit(client) {\n  //   this.setState({ \n  //     clientForm: client,\n  //     client: undefined,\n  //   });\n  // }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Modal isOpen={this.state.client}>\n            <Client data={this.state.client} />\n          </Modal>\n          <Col xl={12}>\n            <Card>\n              <CardHeader>\n                <strong><i className=\"fa fa-users\"></i>  Clientes</strong>\n              </CardHeader>\n              <CardBody>\n                <Table hover responsive className=\"table-outline mb-0 d-sm-table\">\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th>Nome</th>\n                      <th>E-mail</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.clients.map(item =>\n                      <tr key={item.id.toString()}>\n                        <td><a onClick={() => this.toggleClientDetails(item)}><b>{item.name}</b></a></td>\n                        <td>{item.email}</td>\n                      </tr> \n                    )}\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default Clients;\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/Clients/Clients.js","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 278\n// module chunks = 0 1 2","//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        if (!m) {\n            return isArray(this._weekdays) ? this._weekdays :\n                this._weekdays['standalone'];\n        }\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input,units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input,units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n            case 'date':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n\n        // 'date' is an alias for 'day', so it should be considered as such.\n        if (units === 'date') {\n            units = 'day';\n        }\n\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.22.2';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'YYYY-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/moment.js\n// module id = 280\n// module chunks = 0 1 2","import React, { Component } from 'react';\nimport { Row, Col, Card, CardBody, CardHeader, Button } from 'reactstrap';\nimport moment from 'moment';\n\nclass Client extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const client = this.props.data;\n    return (\n      <div className=\"animated fadeIn\">\n        <Card>\n          <CardHeader>\n            <strong className='text-capitalize'><i className=\"icon-user\"></i>&nbsp;{client.name}</strong>\n            <Button type=\"button\" className=\"pull-right\" onClick={() => this.props.handleEdit(client)} size=\"sm\" color=\"warning\"><i className=\"fa fa-pencil\"></i></Button>\n          </CardHeader>\n          <CardBody>\n            <Row>\n              <img style={{ maxHeight: '200px', margin: '0 auto' }} className='img-responsive rounded-circle' src=\"https://image.freepik.com/free-icon/male-user-shadow_318-34042.jpg\" />\n            </Row>\n            <br />\n            <Row>\n              <label className='col-3 text-right'><b>CPF:</b></label>\n              <label className='col-9'>{client.cpf ? client.cpf : '-'}</label>\n            </Row>\n            <Row>\n              <label className='col-3 text-right'><b>E-mail:</b></label>\n              <label className='col-9'>{client.email ? client.email : '-'}</label>\n            </Row>\n            <Row>\n              <label className='col-3 text-right'><b>Telefone 1:</b></label>\n              <label className='col-9'>{client.phone1 ? client.phone1 : '-'}</label>\n            </Row>\n            <Row>\n              <label className='col-3 text-right'><b>Telefone 2:</b></label>\n              <label className='col-9'>{client.phone2 ? client.phone2 : '-'}</label>\n            </Row>\n            <Row>\n              <label className='col-3 text-right'><b>Nascimento:</b></label>\n              <label className='col-9'>{client.birthdate ? moment(client.birthdate).format('DD/MM/YYYY') : '-'}</label>\n            </Row>\n            <Row>\n              <label className='col-3 text-right'><b>Criado em:</b></label>\n              <label className='col-9'>{client.createdat ? moment(client.createdat).format('DD/MM/YYYY HH:MM') : '-'}</label>\n            </Row>\n          </CardBody>\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default Client;\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/Clients/Client.js","import React, { Component } from 'react';\nimport moment from 'moment';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n} from 'reactstrap';\n\nclass ClientForm extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      client: this.props.data || { },\n    }\n  }\n\n  componentWillReceiveProps(nextProps){\n    this.setState({\n      client: nextProps.data || { },\n    })\n  }\n\n  render() {\n    return (\n            <Form method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n              <Input value={!this.state.client.id ? undefined : this.state.client.id} onChange={this.props.handleInput} type=\"hidden\" id=\"id-input\" name=\"id\" />\n              <FormGroup row>\n                <Col md=\"3\">\n                  <Label htmlFor=\"text-input\">Nome</Label>\n                </Col>\n                <Col xs=\"12\" md=\"9\">\n                  <Input value={!this.state.client.name ? '' : this.state.client.name} onChange={this.props.handleInput} type=\"text\" id=\"text-input\" name=\"name\" placeholder=\"Digite o nome completo\" />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"3\">\n                  <Label htmlFor=\"email-input\">E-mail</Label>\n                </Col>\n                <Col xs=\"12\" md=\"9\">\n                  <Input value={!this.state.client.email ? '' : this.state.client.email} onChange={this.props.handleInput} type=\"email\" id=\"email-input\" name=\"email\" placeholder=\"Digite o e-mail\" autoComplete=\"email\"/>\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"3\">\n                  <Label htmlFor=\"cpf-input\">CPF</Label>\n                </Col>\n                <Col xs=\"12\" md=\"9\">\n                  <Input value={!this.state.client.cpf ? '' : this.state.client.cpf} onChange={this.props.handleInput} type=\"text\" maxLength={11  } id=\"cpf-input\" name=\"cpf\" placeholder=\"Informe o CPF (somente números)\" />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"3\">\n                  <Label htmlFor=\"birthDate-input\">Nascimento</Label>\n                </Col>\n                <Col xs=\"12\" md=\"9\">\n                  <Input value={!this.state.client.birthdate ? '' : moment(this.state.client.birthdate).format('YYYY-MM-DD')} onChange={this.props.handleInput} type=\"date\" id=\"birthDate-input\" name=\"birthdate\" />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"3\">\n                  <Label htmlFor=\"phone1-input\">Telefone 1</Label>\n                </Col>\n                <Col xs=\"12\" md=\"9\">\n                  <Input value={!this.state.client.phone1 ? '' : this.state.client.phone1} onChange={this.props.handleInput} type=\"text\" maxLength={12} id=\"phone1-input\" name=\"phone1\" />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"3\">\n                  <Label htmlFor=\"phone2-input\">Telefone 2</Label>\n                </Col>\n                <Col xs=\"12\" md=\"9\">\n                  <Input value={!this.state.client.phone2 ? '' : this.state.client.phone2} onChange={this.props.handleInput} type=\"text\" maxLength={12} id=\"phone2-input\" name=\"phone2\" />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"3\">\n                  <Label htmlFor=\"photo-input\">Foto</Label>\n                </Col>\n                <Col xs=\"12\" md=\"9\">\n                  <Input value={!this.state.client.photo ? '' : this.state.client.photo} onChange={this.props.handleInput} type=\"file\" id=\"photo-input\" name=\"photo\" />\n                </Col>\n              </FormGroup>\n            </Form>\n    )\n  }\n}\n\nexport default ClientForm;\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/Clients/ClientForm.js"],"sourceRoot":""}